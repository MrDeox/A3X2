--- a/patch.py
+++ b/patch.py
--- patch.py
+++ patch.py
@@ -2,45 +2,46 @@
 import sys
 import os
 import subprocess
-import tempfile
 
-if len(sys.argv) != 3:
-    print('Usage: python patch.py <target_file> <patch_file>')
-    sys.exit(1)
+def main():
+    if len(sys.argv) < 3:
+        print("Usage: python patch.py <patch_file> <target_dir>")
+        sys.exit(1)
 
-target_file = sys.argv[1]
-patch_file = sys.argv[2]
+    patch_file = sys.argv[1]
+    target_dir = sys.argv[2]
 
-# Security checks
-if not os.path.isfile(patch_file):
-    print('Error: Patch file does not exist or is not a file.')
-    sys.exit(1)
+    # Security check: ensure patch_file exists and is readable
+    if not os.path.exists(patch_file):
+        print("Error: Patch file not found")
+        sys.exit(1)
 
-if '..' in target_file or not os.path.abspath(target_file).startswith(os.getcwd()):
-    print('Error: Invalid target file path (security check).')
-    sys.exit(1)
+    if not os.access(patch_file, os.R_OK):
+        print("Error: Cannot read patch file")
+        sys.exit(1)
 
-if not os.path.exists(target_file):
-    print('Error: Target file does not exist.')
-    sys.exit(1)
+    # Security check: ensure target_dir is a directory and not a system path
+    if not os.path.isdir(target_dir):
+        print("Error: Target must be a directory")
+        sys.exit(1)
 
-# Apply patch securely using subprocess
-try:
-    with tempfile.NamedTemporaryFile(mode='w', delete=False, suffix='.patch') as temp_patch:
-        with open(patch_file, 'r') as f:
-            temp_patch.write(f.read())
-        temp_patch_path = temp_patch.name
-    
-    result = subprocess.run(['patch', '-i', temp_patch_path, target_file], 
-                            capture_output=True, text=True, check=True)
-    
-    if result.returncode == 0:
-        print('Patch applied successfully.')
-    else:
-        print('Patch failed:', result.stderr)
-        
-except subprocess.CalledProcessError as e:
-    print('Error applying patch:', e)
-finally:
-    if 'temp_patch_path' in locals():
-        os.unlink(temp_patch_path)
+    if os.path.abspath(target_dir).startswith('/etc') or os.path.abspath(target_dir).startswith('/bin'):
+        print("Error: Cannot patch system directories for security reasons")
+        sys.exit(1)
+
+    # Apply patch with error handling
+    try:
+        result = subprocess.run(['patch', '-p1', '-d', target_dir, '-i', patch_file], 
+                                capture_output=True, text=True, check=True)
+        print("Patch applied successfully")
+        print(result.stdout)
+    except subprocess.CalledProcessError as e:
+        print("Patch failed:")
+        print(e.stderr)
+        sys.exit(1)
+    except FileNotFoundError:
+        print("Error: 'patch' command not found")
+        sys.exit(1)
+
+if __name__ == "__main__":
+    main()