- type: message
  text: "Currículo diff step 3: inserir docstring em função add."
- type: command
  command:
    - bash
    - -lc
    - |
      python3 - <<'PY'
      import libcst as cst
      from pathlib import Path

      class DocstringTransformer(cst.CSTTransformer):
          def leave_FunctionDef(self, original_node: cst.FunctionDef, updated_node: cst.FunctionDef):
              if original_node.name.value != "add":
                  return updated_node
              docstring = cst.SimpleStatementLine(
                  [cst.Expr(cst.SimpleString('"""Soma dois inteiros e retorna o resultado."""'))]
              )
              body_items = list(updated_node.body.body)
              if body_items and isinstance(body_items[0], cst.SimpleStatementLine) and isinstance(body_items[0].body[0], cst.Expr) and isinstance(body_items[0].body[0].value, cst.SimpleString):
                  return updated_node
              body_items.insert(0, docstring)
              return updated_node.with_changes(body=cst.IndentedBlock(body_items))

      file_path = Path("samples/core_tests_demo/demo.py")
      module = cst.parse_module(file_path.read_text(encoding="utf-8"))
      new_module = module.visit(DocstringTransformer())
      file_path.write_text(new_module.code, encoding="utf-8")
      PY
  cwd: ".."
- type: finish
  summary: "Currículo diff step 3 executado."
